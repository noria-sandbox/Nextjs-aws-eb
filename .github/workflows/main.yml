name: CI/CD Pipelines - AWS EB
env:
  EB_S3_BUCKET_NAME: "noria-sandbox-eb"
  EB_APPLICATION_NAME: "Next-EB"
  EB_ENVIRONMENT_NAME: "NextJS-Sandbox"
  DEPLOY_PACKAGE_NAME: "nextjs-app-${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-east-1"
  EB_APP_VERSION: "Version-${{ github.sha }}"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  my_ci:
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Create Zip File
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x .git/\* .github/\* .vscode/\* .next/\* node_modules/\*

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Upload ZIP Package to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_S3_BUCKET_NAME }}/

      - name: Print CI complete message
        run: echo "CI pipeline complete!"

  my_cd:
    runs-on: ubuntu-latest
    needs: [my_ci]

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Deploy to AWS Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --version-label ${{ env.EB_APP_VERSION }} \
            --description "Commit-${{ github.sha }}" \
            --source-bundle S3Bucket=${{ env.EB_S3_BUCKET_NAME }},S3Key=${{ env.DEPLOY_PACKAGE_NAME }}
      - name: Deploy to AWS Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --version-label ${{ env.EB_APP_VERSION }}

      - name: Print CD complete message
        run: echo "CD pipeline complete!"
